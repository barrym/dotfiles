set nocompatible          " We're running Vim, not Vi!
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
" Plugin 'sjbach/lusty'
Plugin 'bufexplorer.zip'
Plugin 'nanotech/jellybeans.vim'
Plugin 'tomtom/tcomment_vim'
Plugin 'ervandew/supertab'
Plugin 'Align'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/syntastic'

call vundle#end()
filetype plugin indent on " Enable filetype-specific indenting and plugins

syntax on                 " Enable syntax highlighting

set autoread
set number
set smartindent
set nobackup
set incsearch
set hlsearch
set wrapscan
set smartcase ignorecase
set showcmd
set scrolloff=5
set laststatus=2
set statusline=%F%m\ %y%=c:%c\ l:%l\/%L\ \%p%%
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set visualbell
set nosmarttab
set hidden
set nolazyredraw

" let &colorcolumn=join(range(81,999),",")
let &colorcolumn="81,".join(range(101,999),",")

set list
" set listchars=tab:>-,eol:$
set listchars=tab:>-
set wildmode=longest,full
set guioptions=egmrLt
" set guifont=Source\ Code\ Pro\ ExtraLight:h12,Monaco:h12\\,DejaVu\ Sans\ Mono
let mapleader = " "

" --- Backups & Files ---
set nobackup
set nowritebackup
set noswapfile
" set undofile
set backupdir=/tmp/     " Where backups will go.
set directory=/tmp/     " Where temporary files will go.
set undodir=/tmp/

if has('gui_running')
    set background=light
    set background=dark
    colorscheme jellybeans
else
    set background=dark
    colorscheme jellybeans
endif

colorscheme overrides

highlight ColorColumn ctermbg=235 guibg=#2c2d27

autocmd BufRead *.ru set filetype=ruby
autocmd BufRead *.feature set filetype=ruby
autocmd BufRead *.less set filetype=css
autocmd BufNewFile,BufRead COMMIT_EDITMSG set filetype=gitcommit
autocmd BufNewFile,BufRead *.go setf go
augroup mkd
  autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:>
  autocmd BufRead *.markdown  set ai formatoptions=tcroqn2 comments=n:>
  autocmd BufRead *.md  set ai formatoptions=tcroqn2 comments=n:>
augroup END

runtime! macros/matchit.vim

" Remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
highlight CursorLine guibg=#1D2747
match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufRead,BufNewFile,ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufRead,BufNewFile,InsertLeave * redraw!

" --- Mappings ---
map <Leader>b :BufExplorer<CR>
map <Leader>t :tabnew<CR>

" --- Window control ---
map <silent> <unique> + <C-w>+
map <silent> <unique> - <C-w>-

" CtrlP
:let g:ctrlp_map = '<Leader>p'
:let g:ctrlp_match_window_bottom = 0
:let g:ctrlp_match_window_reversed = 0
nmap <Leader>e :CtrlPMRU<CR>


" --- I WILL learn vim ---
" noremap  <Up> ""
" noremap! <Up> <Esc>
" noremap  <Down> ""
" noremap! <Down> <Esc>
" noremap  <Left> ""
" noremap! <Left> <Esc>
" noremap  <Right> ""
" noremap! <Right> <Esc>

nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

imap kj <C-[>

nore ; :

map <Leader>gb :Gblame<CR>

let g:LustyExplorerSuppressRubyWarning = 1
let g:LustyJugglerSuppressRubyWarning = 1

" Put machine specific vimrc setup in .~/.vimrc_local
source ~/.vimrc_local
