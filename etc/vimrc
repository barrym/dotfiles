set nocompatible          " We're running Vim, not Vi!
filetype off

set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Bundle 'gmarik/vundle'

Bundle 'tpope/vim-fugitive'
Bundle 'sjbach/lusty'
Bundle 'torandu/vim-bufexplorer'
Bundle 'kchmck/vim-coffee-script'
Bundle 'nanotech/jellybeans.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'Vimerl'
Bundle 'Align'

filetype plugin indent on " Enable filetype-specific indenting and plugins

syntax on                 " Enable syntax highlighting

set autoread
set number
set smartindent
set nobackup
set incsearch
" set hlsearch
set wrapscan
set smartcase ignorecase
set showcmd
set scrolloff=5
set laststatus=2
set statusline=%F%m\ %y%=l:\%l\/%L\ \%p%%
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set visualbell
set nosmarttab
set hidden
set nolazyredraw

set list
" set listchars=tab:>-,eol:$
set listchars=tab:>-
set wildmode=longest,full
set guioptions=egmrLt
set guifont=Monaco:h12\\,DejaVu\ Sans\ Mono
let mapleader = " "

" --- Backups & Files ---
set nobackup
set nowritebackup
set noswapfile
" set undofile
set backupdir=/tmp/     " Where backups will go.
set directory=/tmp/     " Where temporary files will go.
set undodir=/tmp/

if has('gui_running')
    set background=light
    set background=dark
    colorscheme jellybeans
else
    set background=dark
    colorscheme jellybeans
endif

" colorscheme overrides

autocmd BufRead *.ru set filetype=ruby
autocmd BufRead *.feature set filetype=ruby
autocmd BufRead *.less set filetype=css
autocmd BufNewFile,BufRead COMMIT_EDITMSG set filetype=gitcommit
autocmd BufNewFile,BufRead *.go setf go
augroup mkd
  autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:>
  autocmd BufRead *.markdown  set ai formatoptions=tcroqn2 comments=n:>
  autocmd BufRead *.md  set ai formatoptions=tcroqn2 comments=n:>
augroup END

runtime! macros/matchit.vim

" Remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
highlight CursorLine guibg=#1D2747
match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufRead,BufNewFile,ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufRead,BufNewFile,InsertLeave * redraw!

" --- mappings ---
map <Leader>b :BufExplorer<CR>
map <Leader>f :Find<space>
map <Leader>n :NERDTreeToggle<CR>
" map <Leader>t :tabnew<CR>

" --- Window control ---
map <silent> <unique> + <C-w>+
map <silent> <unique> - <C-w>-

" --- Rspec ---
map <Leader>ofs :%s/ it / xit <CR>''?xit<CR>x:w<CR>
map <Leader>ons :%s/ xit / it /<CR>'':w<CR>

" --- Align ---

" From inside a hash, autoindents, then aligns on =>
nmap <silent> <Leader>ih <ESC>:AlignPush<CR>:AlignCtrl lp1P1l<CR>mmviB:Align =><CR>:AlignPop<CR>'mvaB=

" Autoformats a single line hash
nmap <Leader>fh <ESC>^:s/{/{\r/<CR>:s/}$/\r}<CR>vaB:s/\v,\s*:/,\r:/g<CR><Leader>ih

" Aligns visual block on =
vmap <silent> <Leader>i= <ESC>:AlignPush<CR>:AlignCtrl lp1P1l<CR>:'<,'>Align =<CR>:AlignPop<CR>

" Aligns visual block on ,
vmap <silent> <Leader>i, <ESC>:AlignPush<CR>:AlignCtrl lp0P1l<CR>:'<,'>Align ,<CR>:AlignPop<CR>

" Aligns visual block on (
vmap <silent> <Leader>i( <ESC>:AlignPush<CR>:AlignCtrl lp0P0l<CR>:'<,'>Align (<CR>:AlignPop<CR>

" --- I WILL learn vim ---
" noremap  <Up> ""
" noremap! <Up> <Esc>
" noremap  <Down> ""
" noremap! <Down> <Esc>
" noremap  <Left> ""
" noremap! <Left> <Esc>
" noremap  <Right> ""
" noremap! <Right> <Esc>

nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

imap jj <C-[>

nore ; :

map <Leader>gb :Gblame<CR>

let g:LustyExplorerSuppressRubyWarning = 1
let g:LustyJugglerSuppressRubyWarning = 1
let erlang_show_errors = 0
